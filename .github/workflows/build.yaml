name: validate and Deploy
on:
  push:
    branches:
      - dev
      - main
    paths:
      - 'environments/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    paths:
      - 'environments/**'
      - '.github/workflows/**'

jobs:
  terraform:
    runs-on: ubuntu-latest

    # scale by changing the matrix of environments
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        env: [ "sandbox" ]

    concurrency:
      group: terraform-${{ matrix.env }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.3

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: environments/${{ matrix.env }}/.terraform
          key: ${{ runner.os }}-terraform-${{ matrix.env }}-${{ hashFiles(format('environments/{0}/**/*.tf*', matrix.env)) }}
          restore-keys: |
            ${{ runner.os }}-terraform-${{ matrix.env }}-

      - name: Terraform init
        run: terraform init -input=false
        working-directory: environments/${{ matrix.env }}

      - name: Terraform fmt (check)
        run: terraform fmt -check -recursive
        working-directory: environments/${{ matrix.env }}

      - name: Terraform validate
        run: terraform validate
        working-directory: environments/${{ matrix.env }}

      # Optional: plan and (manual approval) apply steps per environment
      - name: Terraform plan
        run: terraform plan -out=plan.tfplan || true
        working-directory: environments/${{ matrix.env }}